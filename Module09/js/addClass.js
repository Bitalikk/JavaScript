'use strict';
// ===================== Task 01 =============================================
/*
 * –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ —Ü–≤–µ—Ç–æ–≤ –≤ hex-—Ñ–æ—Ä–º–∞—Ç–µ –∏ –∫–Ω–æ–ø–∫–∏ Start –∏ Stop. 
 * 
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ Start, —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É
 * –º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ body –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞. –ò—Å–ø–æ–ª—å–∑—É–π
 * –∏–Ω–ª–∞–π–Ω-—Å—Ç–∏–ª—å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è background-color.
 *
 * –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Stop, –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è.
 * 
 * –£—á—Ç–∏, —á—Ç–æ –Ω–∞ –∫–Ω–æ–ø–∫—É Start –º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑.
 * –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –∑–∞–ø—É—à–µ–Ω–æ, –∫–Ω–æ–ø–∫–∞ Start –±—ã–ª–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.
*/

// const colors = [
//     "#FFFFFF",
//     "#2196F3",
//     "#4CAF50",
//     "#FF9800",
//     "#009688",
//     "#795548"
//   ];
  
//   let start = null;

//   function changeColors(evt) {
//     if(evt.target.dataset.action === 'start') {
//       start = setInterval(() => {
//         document.body.style.backgroundColor = colors[Math.floor((Math.random() * colors.length) + 1)];
//         evt.target.disabled = true;
//       }, 1000);
//     }
//      if(evt.target.dataset.action === 'stop') {
//        clearInterval(start);
//        evt.target.previousElementSibling.disabled = false;
//      }
//   }

//   document.body.addEventListener('click', changeColors);


// ============================= Task 02 ======================================


/* 
  –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getFormattedTime(time), –∫–æ—Ç–æ—Ä–∞—è 
  –ø–æ–ª—É—á–∞–µ—Ç time - –∫–æ–ª-–≤–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 
  —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x, 01:23.6, –º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã.–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã.
  
  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞ Date –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.
  
  –ò–∑ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –Ω–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä—è–¥ —Å —Å–æ—Ç–Ω—è–º–∏,
  —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ —Å–µ–π—á–∞—Å 831–º—Å —Ç–æ –Ω–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ü–∏—Ñ—Ä–∞ 8.
*/

// function getFormattedTime(time) {
//   const res = new Date(time);
//   const min = res.getMinutes() < 10 ? '0' + res.getMinutes() : res.getMinutes();
//   const sec = res.getSeconds() < 10 ? '0' + res.getSeconds(): res.getSeconds();
//   const mil = parseInt(res.getMilliseconds() / 100);
//   return `${min}:${sec}:${mil}`;
// }

// console.log(
//   getFormattedTime(1523621052858)
// ); // 04:12.8

// console.log(
//   getFormattedTime(1523621161159)
// ); // 06:01.1

// console.log(
//   getFormattedTime(1523621244239)
// ); // 07:24.2




//============================= Task 03 ================================
/* 
  –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –±–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
  —Ç–∞–π–º–µ—Ä–∞, –∑–∞–ø—É—Å–∫ –æ—Ç—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞
  –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
  
  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞ Date –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.
  
  –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é startTimer, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å
  –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –µ–µ –Ω–∞–∂–∞—Ç–∏—è, –æ–Ω–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è 
  –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∫–ª–∞—Å—Å–æ–º js-timer-start.
  
  –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é stopTimer, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å
  —Å—á–µ—Ç—á–∏–∫, –æ–Ω–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∫–ª–∞—Å—Å–æ–º js-timer-stop.
  
  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é updateClockface 
  –∫–æ—Ç–æ—Ä–∞—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ. 
  –î–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x, 
  –∏—Å–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getFormattedTime –∏–∑ –∑–∞–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä 3.
  
  –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ç–∞–∫ –∫–∞–∫ –Ω–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ç–Ω–∏ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥,
      –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–µ—Ä–µ—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —á–∞—â–µ —á–µ–º –∫–∞–∂–¥—ã–µ 100–º—Å.
*/

// const clockface = document.querySelector(".js-clockface");
// const startBtn = document.querySelector(".js-timer-start");
// const stopBtn = document.querySelector(".js-timer-stop");

// const timer = {
//   startTime: null,
//   deltaTime: null,
//   id: null
// };

// startBtn.addEventListener('click', startTimer);
// stopBtn.addEventListener('click', stopTimer);

// function startTimer() {
//   timer.startTime = Date.now();
//   timer.id = setInterval(() => {
//     timer.deltaTime = Date.now() - timer.startTime;
//     updateClockface(clockface, timer.deltaTime);
//   }, 100);
// }

// function stopTimer() {
//   clearInterval(timer.id);
//   clockface.textContent = `00:00:00`;
//   timer.startTime = null;
//   timer.deltaTime = null;
//   timer.id = null;
//   console.log(timer);
// }
// /*
// * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// */

// /*
// * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø—Ä–∏ –≤—ã–∑–æ–≤–µ
// * –∞—Ä–≥—É–º–µ–Ω—Ç time —ç—Ç–æ –∫–æ–ª-–≤–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
// */
// function updateClockface(elem, time) {
//   const res = new Date(time);
//   const min = res.getMinutes() < 10 ? '0' + res.getMinutes() : res.getMinutes();
//   const sec = res.getSeconds() < 10 ? '0' + res.getSeconds(): res.getSeconds();
//   const mil = parseInt(res.getMilliseconds() / 100);
//   elem.textContent = `${min}:${sec}:${mil}`;
// }

// /*
// * –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
// */
// function setActiveBtn(target) {
//   if(target.classList.contains('active')) {
//     return;
//   }
  
//   startBtn.classList.remove('active');
//   stopBtn.classList.remove('active');
  
//   target.classList.add('active');
// }


//=============================== Task 04 ==================================================

/*
 * –ï—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è quantity —Ö—Ä–∞–Ω—è—â–∏–∞—è –≤ —Å–µ–±–µ
 * —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü –∫–∞–∫–æ–≥–æ-—Ç–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ.
 * 
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é processOrder(value), –ø–æ–ª—É—á–∞—é—â—É—é
 * –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º, –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –ø—Ä–æ–º–∏—Å.
 * 
 * –î–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
 * –Ω–∞ —Å–∫–ª–∞–¥–µ –∏—Å–ø–æ–ª—å–∑—É–π setTimeout —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 500–º—Å.
 * 
 * –ï—Å–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ —Ç–æ–≤–∞—Ä–æ–≤ –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–Ω–æ–º—É
 * –∫–æ–ª–∏—á–µ—Å—Ç–≤—É, —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è
 * —É—Å–ø–µ—à–Ω–æ —Å–æ —Å—Ç—Ä–æ–∫–æ–π "–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤!".
 * 
 * –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, —Å–æ —Å—Ç—Ä–æ–∫–æ–π "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ —Å–∫–ª–∞–¥–µ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤!".
 * 
 * –ï—Å–ª–∏ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ, —Ç–æ –ø—Ä–æ–º–∏—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –æ—à–∏–±–∫–æ–π
 * –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!".
*/

// const DELAY = 1000;
// const quantity = 100;


// function processOrder(value) {
//   const promise = new Promise((resolve, reject) => {
//     setTimeout(() => {
//       if(value <= quantity) {
//         resolve('–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤!');
//       } else if(value > quantity) {
//         resolve('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ —Å–∫–ª–∞–¥–µ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤!');
//       } else {
//         reject('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!');
//       }
//     }, 500);
//   });
//   return promise;
// }
// // –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
// processOrder(50)
//   .then(console.log) // –í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤!
//   .catch(console.log);

// processOrder(50)
//   .then(console.log) // –í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤!
//   .catch(console.log);

// processOrder(500)
//   .then(console.log) // –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ —Å–∫–ª–∞–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤!
//   .catch(console.log);

// processOrder("lorem")
//   .then(console.log)
//   .catch(console.log); // –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!


// ========================== Homework =============================


/*
  –°–æ–∑–¥–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞.  
  –ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä –≤—ã–±—Ä–∞–≤ Stopwatch http://www.online-stopwatch.com/full-screen-stopwatch/
  
  –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤ HTML –µ—Å—Ç—å —Ä–∞–∑–º–µ—Ç–∫–∞:
  
  <div class="stopwatch">
    <p class="time js-time">00:00.0</p>
    <button class="btn js-start">Start</button>
    <button class="btn js-take-lap">Lap</button>
    <button class="btn js-reset">Reset</button>
  </div>
  <ul class="laps js-laps"></ul>
  
  –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
  
  - –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É button.js-start, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç –≤—Ä–µ–º—è 
    —Å–æ —Å—Ç–∞—Ä—Ç–∞ –∏ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏, –æ–±–Ω–æ–≤–ª—è—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞ p.js-time 
    –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x (–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã.—Å–æ—Ç–Ω–∏_–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥).
       
    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ç–∞–∫ –∫–∞–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ—Ç–Ω–∏ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥, –∏–Ω—Ç–µ—Ä–≤–∞–ª
                  –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –Ω–µ —á–∞—â–µ —á–µ–º 1 —Ä–∞–∑ –≤ 100 –º—Å.
    
  - –ö–æ–≥–¥–∞ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –∑–∞–ø—É—â–µ–Ω, —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ button.js-start –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Pause', 
    –∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏ –∫–ª–∏–∫–µ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –æ—Å—Ç–∞–≤–Ω–æ–≤–∫—É —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ –±–µ–∑ —Å–±—Ä–æ—Å–∞ 
    –∑–Ω–∞—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏.
    
    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –±—É–ª—å –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω/–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.
  
  - –ï—Å–ª–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–∞—É–∑—ã, —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ button.js-start
    –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Continue'. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∫–ª–∏–∫–µ –≤ –Ω–µ–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏, 
    –∞ —Ç–µ–∫—Å—Ç –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Pause'. –¢–æ –µ—Å—Ç—å –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –Ω–∞–∂–∞—Ç–∏—è 'Pause' –ø—Ä–æ—à–ª–æ 6 —Å–µ–∫—É–Ω–¥ 
    —Å–æ —Å—Ç–∞—Ä—Ç–∞, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ 'Continue' 10 —Å–µ–∫—É–Ω–¥ —Å–ø—É—Å—Ç—è, —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ 
    —Å 6 —Å–µ–∫—É–Ω–¥, –∞ –Ω–µ —Å 16. 
    
    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤—Ä–µ–º—è —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–∞—É–∑—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ 
                  –ø—Ä–∏ —Ä–∞—Å—Å—á–µ—Ç–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –æ—Ç–Ω–∏–º–∞—è
                  —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞.
    
  - –ï—Å–ª–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–∞—É–∑—ã, –∫–Ω–æ–ø–∫–∞ 
    button.js-reset –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞ (–Ω–∞ –Ω–µ–µ –º–æ–∂–Ω–æ –∫–ª–∏–∫–Ω—É—Ç—å), –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    disabled. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏ –∫–ª–∏–∫–µ - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –∏ —Å–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    
  - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ button.js-take-lap –ø—Ä–∏ –∫–ª–∏–∫–µ - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ 
    –≤ –º–∞—Å—Å–∏–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ ul.js-laps –Ω–æ–≤–æ–≥–æ li —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x
*/
const stopwatch = document.querySelector('.stopwatch');
const time = document.querySelector('.js-time');
const laps = document.querySelector('.js-laps');
const timer = {
  startTime: null,
  deltaTime: null,
  id: null,
};
const arrLaps = [];
stopwatch.addEventListener('click', startTimer);



function startTimer(evt) {
  const target = evt.target;
  if(target.textContent === 'Start') {
    timer.startTime = Date.now();
    target.textContent = 'Pause';
    document.querySelector('.js-reset').disabled = false;
    timer.id = setInterval(() => {
      timer.deltaTime = Date.now() - timer.startTime;
      getFormattedTime(time, timer.deltaTime);
    }, 100);
  } else if(target.textContent === 'Pause') {
    target.textContent = 'Continue';
    clearInterval(timer.id);
  } else if(target.textContent === 'Continue') {
    timer.startTime = Date.now() - timer.deltaTime;
    target.textContent = 'Pause';
    timer.id = setInterval(() => {
      timer.deltaTime = Date.now() - timer.startTime;
      getFormattedTime(time, timer.deltaTime);
    }, 100);
  } else if(target.textContent === 'Reset') {
    clearInterval(timer.id);
    timer.startTime = null;
    timer.deltaTime = null;
    timer.id = null;
    document.querySelector('.js-start').textContent = 'Start';
    target.disabled = true;
    time.textContent = '00:00:00';
    Array.from(laps.children).forEach(el => el.remove());
  } else if(target.textContent === 'Lap') {
      const lap = time.textContent;
      arrLaps.push(lap);
      laps.insertAdjacentHTML('afterbegin', `<li>${lap}</li>`);
  } else {
    return;
  }
}
function getFormattedTime(elem, time) {
  const newTime = new Date(time);
  const minutes = newTime.getMinutes() < 10 ? '0' + newTime.getMinutes() : newTime.getMinutes();
  const seconds = newTime.getSeconds() < 10 ? '0' + newTime.getSeconds() : newTime.getSeconds();
  const milliseconds = parseInt(newTime.getMilliseconds() / 100);
  elem.textContent = `${minutes}:${seconds}:${milliseconds}`;
}


/*
  ‚ö†Ô∏è –ó–ê–î–ê–ù–ò–ï –ü–û–í–´–®–ï–ù–ù–û–ô –°–õ–û–ñ–ù–û–°–¢–ò - –í–´–ü–û–õ–ù–Ø–¢–¨ –ü–û –ñ–ï–õ–ê–ù–ò–Æ
  
  –í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞—Å—Å —Å –ø–æ–ª—è–º–∏ –∏ –º–µ—Ç–æ–¥–∞–º–∏.
  
  –ù–∞ –≤—Ö–æ–¥ –∫–ª–∞—Å—Å Stopwatch –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É –Ω–∞ DOM-—É–∑–µ–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç 
  –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–∞ –≤—Å—è —Ä–∞–∑–º–µ—Ç–∫–∞ –¥–ª—è —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞.
  
  –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–µ–∫—É–Ω–¥–æ–º–µ–Ω—Ç–æ–≤ 
  –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –≤—Å–µ –æ–Ω–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ.
  
  –ö –ø—Ä–∏–º–µ—Ä—É:
  
  new Stopwatch(parentA);
  new Stopwatch(parentB);
  new Stopwatch(parentC);
  
  –ì–¥–µ parent* —ç—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π DOM-—É–∑–µ–ª. 
*/

class Stopwatch {
  constructor(parent) {
    this.parent = parent;
    this.startTime = null;
    this.deltaTime = null;
    this.id = null;
    this.bod = document.createElement('div');
    this.time = document.createElement('p');
    this.startBtn = document.createElement('button');
    this.lapBtn = document.createElement('button');
    this.resetBtn = document.createElement('button');
    this.laps = document.createElement('ul');
    this.arrLaps = [];
    this.createPage = this.createPage.bind(this);
    this.getFormattedTime = this.getFormattedTime.bind(this);
    window.addEventListener('DOMContentLoaded', this.createPage);
  }

  createPage() {
    this.bod.classList.add('stopwatch');
    this.time.classList.add('time', 'js-time');
    this.time.textContent = '00:00:0';
    this.startBtn.classList.add('btn', 'js-start');
    this.startBtn.textContent = 'Start';
    this.lapBtn.classList.add('btn', 'js-take-lap');
    this.lapBtn.textContent = 'Lap';
    this.resetBtn.classList.add('btn', 'js-reset');
    this.resetBtn.textContent = 'Reset';
    this.resetBtn.disabled = true;
    this.laps.classList.add('laps', 'js-laps');
    this.bod.append(this.time, this.startBtn, this.lapBtn, this.resetBtn);
    this.parent.append(this.bod, this.laps);
    this.startTimer = this.startTimer.bind(this);
    this.bod.addEventListener('click', this.startTimer);
  }

  getFormattedTime(t) {
    const newTime = new Date(t);
    const minutes = newTime.getMinutes() < 10 ? '0' + newTime.getMinutes() : newTime.getMinutes();
    const seconds = newTime.getSeconds() < 10 ? '0' + newTime.getSeconds() : newTime.getSeconds();
    const milliseconds = parseInt(newTime.getMilliseconds() / 100);
    this.time.textContent = `${minutes}:${seconds}:${milliseconds}`;
  }
  
  startTimer(evt) {
    const target = evt.target;
    if(target.textContent === 'Start') {
      this.startTime = Date.now();
      target.textContent = 'Pause';
      this.resetBtn.disabled = false;
      this.id = setInterval(() => {
        this.deltaTime = Date.now() - this.startTime;
        this.getFormattedTime(this.deltaTime);
      }, 100);
    } else if(target.textContent === 'Pause') {
      target.textContent = 'Continue';
      clearInterval(this.id);
    } else if(target.textContent === 'Continue') {
      this.startTime = Date.now() - this.deltaTime;
      target.textContent = 'Pause';
      this.id = setInterval(() => {
        this.deltaTime = Date.now() - this.startTime;
        this.getFormattedTime(this.deltaTime);
      }, 100);
    } else if(target.textContent === 'Reset') {
      clearInterval(this.id);
      this.startTime = null;
      this.deltaTime = null;
      this.id = null;
      this.startBtn.textContent = 'Start';
      target.disabled = true;
      this.time.textContent = '00:00:00';
      Array.from(this.laps.children).forEach(el => el.remove());
    } else if(target.textContent === 'Lap') {
        const lap = this.time.textContent;
        this.arrLaps.push(lap);
        this.laps.insertAdjacentHTML('afterbegin', `<li>${lap}</li>`);
    } else {
      return;
    }
  }
}

const box = document.querySelector('.stopwatch1');
const watch = new Stopwatch(box);

const sBox = document.querySelector('.stopwatch2');
const sWatch = new Stopwatch(sBox);

